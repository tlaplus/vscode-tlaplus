{
    "name": "vscode-tlaplus",
    "displayName": "TLA+",
    "version": "1.6.0",
    "description": "TLA+ language support",
    "publisher": "alygin",
    "license": "MIT",
    "author": {
        "name": "Andrew Lygin"
    },
    "engines": {
        "vscode": "^1.82.0"
    },
    "categories": [
        "Programming Languages",
        "Snippets",
        "Formatters",
        "Other",
        "Debuggers"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/alygin/vscode-tlaplus.git"
    },
    "bugs": {
        "url": "https://github.com/alygin/vscode-tlaplus/issues"
    },
    "icon": "resources/images/tlaplus.png",
    "keywords": [
        "TLA+",
        "PlusCal",
        "TLC",
        "Formal models",
        "Specification",
        "Modeling"
    ],
    "activationEvents": [
        "onLanguage:tlaplus",
        "onCommand:tlaplus.parse",
        "onCommand:tlaplus.model.check.run",
        "onCommand:tlaplus.model.check.customRun",
        "onCommand:tlaplus.exportToTex",
        "onCommand:tlaplus.exportToPdf",
        "onCommand:tlaplus.evaluateSelection",
        "onCommand:tlaplus.evaluateExpression",
        "workspaceContains:**/*.tla"
    ],
    "main": "./out/main.js",
    "browser": "./out/main.browser.js",
    "files": [
        "resources",
        "tools"
    ],
    "contributes": {
        "terminal": {
            "profiles": [
                {
                    "title": "TLA+ REPL",
                    "id": "tlaplus.repl.run"
                }
            ]
        },
        "debuggers": [
            {
                "type": "tlaplus",
                "label": "TLA+ Debug"
            }
        ],
        "breakpoints": [
            {
                "language": "tlaplus"
            }
        ],
        "languages": [
            {
                "id": "tlaplus",
                "aliases": [
                    "TLA+",
                    "tlaplus"
                ],
                "extensions": [
                    ".tla"
                ],
                "configuration": "./languages/tlaplus-lang-config.json"
            },
            {
                "id": "pluscal",
                "aliases": [
                    "PlusCal",
                    "pluscal"
                ],
                "extensions": [],
                "configuration": "./languages/pluscal-lang-config.json"
            },
            {
                "id": "tlaplus_cfg",
                "aliases": [],
                "extensions": [
                    ".cfg"
                ],
                "configuration": "./languages/cfg-lang-config.json"
            },
            {
                "id": "tlaplus_out",
                "extensions": [
                    ".out"
                ]
            }
        ],
        "grammars": [
            {
                "language": "tlaplus",
                "scopeName": "source.tlaplus",
                "path": "./languages/tlaplus-grammar.json"
            },
            {
                "language": "pluscal",
                "scopeName": "source.tlaplus.pluscal",
                "path": "./languages/pluscal-grammar.json"
            },
            {
                "language": "tlaplus_cfg",
                "scopeName": "source.tlaplus.cfg",
                "path": "./languages/cfg-grammar.json"
            },
            {
                "language": "tlaplus_out",
                "scopeName": "source.tlaplus.out",
                "path": "./languages/out-grammar.json"
            }
        ],
        "commands": [
            {
                "command": "tlaplus.parse",
                "title": "Parse module",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.exportToTex",
                "title": "Export module to LaTeX",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.exportToPdf",
                "title": "Export module to PDF",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.run",
                "title": "Check model with TLC",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.customRun",
                "title": "Check model with TLC using non-default config...",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.runAgain",
                "title": "Run last model check again",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.stop",
                "title": "Stop model checking process",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.display",
                "title": "Display model checking panel",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.out.visualize",
                "title": "Visualize TLC output",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.evaluateSelection",
                "title": "Evaluate selected expression",
                "category": "TLA+",
                "enablement": "editorHasSelection"
            },
            {
                "command": "tlaplus.evaluateExpression",
                "title": "Evaluate expression...",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.debugger.run",
                "title": "Check and debug model with TLC",
                "enablement": "!inDebugMode",
                "icon": "$(debug-alt)",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.debugger.customRun",
                "title": "Check and debug model with TLC using non-default config...",
                "enablement": "!inDebugMode",
                "icon": "$(debug-alt)",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.debugger.attach",
                "title": "Debug a running model",
                "enablement": "!inDebugMode",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.repl.run",
                "title": "Run REPL in Terminal",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.tlaps.check-step",
                "title": "Check proof step in TLAPS",
                "category": "TLA+"
            }
        ],
        "snippets": [
            {
                "language": "tlaplus",
                "scopeName": "source.tlaplus.pluscal",
                "path": "./languages/pluscal-snippets.json"
            },
            {
                "language": "tlaplus",
                "scopeName": "source.tlaplus",
                "path": "./languages/tlaplus-snippets.json"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "tlaplus.parse",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.exportToTex",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.exportToPdf",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.model.check.run",
                    "when": "editorLangId == tlaplus || editorLangId == tlaplus_cfg"
                },
                {
                    "command": "tlaplus.model.check.runAgain",
                    "when": "tlaplus.tlc.canRunAgain"
                },
                {
                    "command": "tlaplus.model.check.customRun",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.model.check.stop",
                    "when": "tlaplus.tlc.isRunning"
                },
                {
                    "command": "tlaplus.out.visualize",
                    "when": "resourceExtname == .out"
                },
                {
                    "command": "tlaplus.evaluateSelection",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.evaluateExpression",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.debugger.run",
                    "when": "editorLangId == tlaplus || editorLangId == tlaplus_cfg"
                },
                {
                    "command": "tlaplus.debugger.attach"
                },
                {
                    "command": "tlaplus.repl.run"
                }
            ],
            "explorer/context": [
                {
                    "command": "tlaplus.model.check.run",
                    "when": "resourceLangId == tlaplus || resourceLangId == tlaplus_cfg",
                    "group": "z_commands"
                }
            ],
            "editor/context": [
                {
                    "command": "tlaplus.model.check.run",
                    "when": "editorLangId == tlaplus || editorLangId == tlaplus_cfg",
                    "group": "z_commands@10"
                },
                {
                    "command": "tlaplus.debugger.run",
                    "when": "editorLangId == tlaplus || editorLangId == tlaplus_cfg",
                    "group": "z_commands@20"
                },
                {
                    "command": "tlaplus.out.visualize",
                    "when": "resourceExtname == .out",
                    "group": "z_commands"
                },
                {
                    "command": "tlaplus.evaluateSelection",
                    "when": "editorLangId == tlaplus",
                    "group": "z_commands"
                }
            ],
            "editor/title": [
                {
                    "command": "tlaplus.debugger.run",
                    "when": "resourceLangId == tlaplus || editorLangId == tlaplus_cfg",
                    "group": "1_run@20"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "TLA+",
            "properties": {
                "tlaplus.java.home": {
                    "type": "string",
                    "scope": "window",
                    "default": "",
                    "description": "Path to Java (8 or higher, 11 is recommended) home directory that should be used to run TLA+ tools.",
                    "maxLength": 1000
                },
                "tlaplus.java.options": {
                    "type": "string",
                    "scope": "window",
                    "default": "",
                    "markdownDescription": "Java options to use when running TLA+ tools. [How it works.](https://github.com/alygin/vscode-tlaplus/wiki/Java-Options)",
                    "maxLength": 1000
                },
                "tlaplus.pluscal.options": {
                    "type": "string",
                    "scope": "window",
                    "default": "",
                    "description": "Additional options to pass to PlusCal transpiler.",
                    "maxLength": 1000
                },
                "tlaplus.tlc.modelChecker.options": {
                    "type": "string",
                    "scope": "window",
                    "default": "",
                    "description": "Additional options to pass to TLC.",
                    "maxLength": 1000
                },
                "tlaplus.tlc.modelChecker.optionsPrompt": {
                    "type": "boolean",
                    "scope": "window",
                    "default": true,
                    "description": "Show prompt for TLC options each time model checking is run."
                },
                "tlaplus.tlc.modelChecker.createOutFiles": {
                    "type": "boolean",
                    "scope": "window",
                    "default": true,
                    "description": "Send TLC output to .out file."
                },
                "tlaplus.tlc.statisticsSharing": {
                    "type": "string",
                    "scope": "machine",
                    "default": "doNotShare",
                    "markdownDescription": "Allows you to send the TLC usage statistics to [the publicly available database](https://exec-stats.tlapl.us). You can find more details on what is shared [here](https://github.com/tlaplus/tlaplus/blob/master/tlatools/org.lamport.tlatools/src/util/ExecutionStatisticsCollector.md).",
                    "enum": [
                        "share",
                        "shareWithoutId",
                        "doNotShare"
                    ],
                    "enumDescriptions": [
                        "TLC statistics will be shared along with the installation ID.",
                        "TLC statistics will be shared without the installation ID.",
                        "No TLC statistics will be shared."
                    ]
                },
                "tlaplus.pdf.convertCommand": {
                    "default": "pdflatex",
                    "type": "string",
                    "scope": "application",
                    "maxLength": 1000,
                    "description": "Command to produce PDFs from .tex files."
                },
                "tlaplus.tlaps.enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable TLAPS integration."
                },
                "tlaplus.tlaps.lspServerCommand": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "Command and arguments to start a TLAPS LSP server.",
                    "default": ["opam", "exec", "--", "tlapm_lsp", "--log-io", "--log-to=/tmp/tlapm_lsp.log"]
                },
                "tlaplus.tlaps.wholeLine": {
                    "type": "boolean",
                    "default": true,
                    "description": "Mark proof step states using whole line."
                }
            }
        },
        "configurationDefaults": {
            "[tlaplus]": {
                "editor.insertSpaces": true,
                "editor.tabSize": 4,
                "editor.formatOnType": true,
                "editor.detectIndentation": false
            },
            "[tlaplus_cfg]": {
                "editor.insertSpaces": true,
                "editor.tabSize": 4,
                "editor.formatOnType": true,
                "editor.detectIndentation": false
            }
        },
        "colors": [
            {
                "id": "tlaplus.tlaps.proofState.proved",
                "description": "Background for a proved sequent.",
                "defaults": {
                    "dark": "#00ff0020",
                    "light": "#00ff0020",
                    "highContrast": "#00ff0050"
                }
            },
            {
                "id": "tlaplus.tlaps.proofState.failed",
                "description": "Background for a failed to prove sequent.",
                "defaults": {
                    "dark": "#ff000030",
                    "light": "#ff000030",
                    "highContrast": "#ff000060"
                }
            },
            {
                "id": "tlaplus.tlaps.proofState.omitted",
                "description": "Background for a sequent with omitted proof.",
                "defaults": {
                    "dark": "#ff660020",
                    "light": "#ff660020",
                    "highContrast": "#ff660050"
                }
            },
            {
                "id": "tlaplus.tlaps.proofState.missing",
                "description": "Background for a sequent with no proof.",
                "defaults": {
                    "dark": "#ff660020",
                    "light": "#ff660020",
                    "highContrast": "#ff660050"
                }
            },
            {
                "id": "tlaplus.tlaps.proofState.pending",
                "description": "Background for a sequent whose proof was not checked yet.",
                "defaults": {
                    "dark": "#c8c8c820",
                    "light": "#c8c8c820",
                    "highContrast": "#c8c8c850"
                }
            },
            {
                "id": "tlaplus.tlaps.proofState.progress",
                "description": "Background for a sequent which is currently being checked.",
                "defaults": {
                    "dark": "#d8d8d820",
                    "light": "#d8d8d820",
                    "highContrast": "#d8d8d850"
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile -- --production",
        "compile": "node ./esbuild.js",
        "lint": "eslint --ext .ts,.tsx src/ tests/",
        "watch": "npm run compile -- --watch",
        "pretest": "tsc -p ./",
        "test": "node ./out/tests/runTest.js",
        "test:tlaplus-grammar": "vscode-tmgrammar-test ./tests/suite/languages/tlaplus-grammar-test.tla -g ./languages/tlaplus-grammar.json -g ./languages/pluscal-grammar.json"
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "^18.15.0",
        "@types/react": "^18.2.6",
        "@types/react-dom": "^18.2.4",
        "@types/vscode": "^1.82.0",
        "@typescript-eslint/eslint-plugin": "^5.59.5",
        "@typescript-eslint/parser": "^5.59.5",
        "@vscode/debugadapter-testsupport": "^1.63.0",
        "@vscode/test-electron": "^2.3.2",
        "esbuild": "^0.17.19",
        "eslint": "^8.40.0",
        "glob": "^8.1.0",
        "mocha": "^10.2.0",
        "node": "^18.15.0",
        "source-map-support": "^0.5.19",
        "typescript": "^5.0.4",
        "vscode-tmgrammar-test": "^0.1.1"
    },
    "dependencies": {
        "@microsoft/fast-components": "^2.30.6",
        "@microsoft/fast-react-wrapper": "^0.3.18",
        "@vscode/codicons": "^0.0.33",
        "@vscode/debugadapter": "^1.63.0",
        "@vscode/webview-ui-toolkit": "^1.2.2",
        "vscode-languageclient": "^9.0.0",
        "await-notify": "^1.0.1",
        "moment": "^2.29.4",
        "react": "^18.2.0",
        "react-dom": "^18.2.0",
        "@cocalc/ansi-to-react": "^7.0.0",
        "vscode-uri": "^3.0.7"
    }
}
